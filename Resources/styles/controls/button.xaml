<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:userControls="clr-namespace:Gbs.Helpers.UserControls">
  <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
    <Setter Property="Control.Background" Value="{DynamicResource ListSecondBackground}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  CornerRadius="{TemplateBinding Border.CornerRadius}"
                  Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  BorderBrush="{DynamicResource DefaultForeground60}"
                  Background="{TemplateBinding Control.Background}">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              Content="{TemplateBinding ContentControl.Content}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Value="{DynamicResource SelectionBackground}" Property="Border.BorderBrush"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource SelectionBackground}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource SelectionForeground}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="UIElement.Opacity" Value="0.8"/>
        <Setter Property="UIElement.RenderTransform">
          <Setter.Value>
            <TranslateTransform/>
          </Setter.Value>
        </Setter>
        <TriggerBase.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="0" To="2"
                               Duration="00:00:00.100"/>
            </Storyboard>
          </BeginStoryboard>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value="0.6"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="btnOk" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButton}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="border" BorderThickness="1" CornerRadius="5" Opacity="1" VerticalAlignment="Stretch"
                  BorderBrush="{DynamicResource DefaultForeground60}"
                  Background="{DynamicResource ButtonOkBackgroundColor}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="1*"/>
              </Grid.ColumnDefinitions>
              <Viewbox Grid.Row="1" Grid.Column="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <Label Foreground="{DynamicResource ButtonOkForegroundColor}"
                         Content="{TemplateBinding ContentControl.Content}" FontSize="20" VerticalContentAlignment="Center"
                         HorizontalAlignment="Center" Padding="0"/>
                </StackPanel>
              </Viewbox>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.Background"/>
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.BorderBrush"/>
              <Setter TargetName="border" Value="{DynamicResource SelectionForeground}" Property="TextElement.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.BorderBrush"/>
              <Setter TargetName="border" Property="Border.BorderThickness" Value="2"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="btnCancel" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButton}">
    <Setter Property="Button.IsCancel" Value="true"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="border" BorderThickness="1" CornerRadius="4" Opacity="1"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{DynamicResource ButtonCancelBackgroundColor}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.2*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="0.2*"/>
              </Grid.ColumnDefinitions>
              <Viewbox Grid.Row="1" Grid.Column="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                  <TextBlock x:Name="TextBlock" Text="{TemplateBinding ContentControl.Content}" FontSize="20"
                             Foreground="{DynamicResource ButtonCancelForegroundColor}" HorizontalAlignment="Center "
                             VerticalAlignment="Center"/>
                </StackPanel>
              </Viewbox>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.Background"/>
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.BorderBrush"/>
              <Setter TargetName="TextBlock" Value="{DynamicResource SelectionForeground}"
                      Property="TextBlock.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="border" Value="{DynamicResource SelectionBackground}" Property="Border.BorderBrush"/>
              <Setter TargetName="border" Property="Border.BorderThickness" Value="2"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="btnAction" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButton}">
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Border.CornerRadius" Value="4"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultForeground}"/>
    <Setter Property="FrameworkElement.Margin" Value="4"/>
    <Setter Property="FrameworkElement.Height" Value="50"/>
    <Setter Property="FrameworkElement.Width" Value="50"/>
  </Style>
  <Style x:Key="btnTransparent" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButton}">
    <Setter Property="Border.Background" Value="Transparent"/>
    <Setter Property="Border.CornerRadius" Value="0"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
  </Style>
  <Style x:Key="btnConfirm_Ok" TargetType="{x:Type Button}" BasedOn="{StaticResource btnOk}">
    <Setter Property="FrameworkElement.Height" Value="60"/>
    <Setter Property="FrameworkElement.Width" Value="220"/>
    <Setter Property="Control.FontSize" Value="18"/>
    <Setter Property="FrameworkElement.Margin" Value="4"/>
  </Style>
  <Style x:Key="btnConfirm_Ext" TargetType="{x:Type Button}" BasedOn="{StaticResource btnAction}">
    <Setter Property="FrameworkElement.Height" Value="60"/>
    <Setter Property="FrameworkElement.Width" Value="220"/>
    <Setter Property="Control.FontSize" Value="18"/>
    <Setter Property="FrameworkElement.Margin" Value="4"/>
  </Style>
  <Style x:Key="btnConfirm_Cancel" TargetType="{x:Type Button}" BasedOn="{StaticResource btnCancel}">
    <Setter Property="FrameworkElement.Height" Value="40"/>
    <Setter Property="FrameworkElement.Width" Value="150"/>
    <Setter Property="FrameworkElement.Margin" Value="4"/>
  </Style>
  <Style x:Key="SettingsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="FrameworkElement.MinHeight" Value="35"/>
    <Setter Property="FrameworkElement.Height" Value="Auto"/>
    <Setter Property="FrameworkElement.MinWidth" Value="250"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="Border.CornerRadius" Value="3"/>
    <Setter Property="Control.Padding" Value="8 0"/>
  </Style>
  <Style TargetType="{x:Type userControls:CategorySelectionControl}">
    <Setter Property="Control.FontSize" Value="20"/>
  </Style>
  <Style TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource DefaultForeground}"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="FrameworkElement.Margin" Value="4"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="InsideBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2"
                  Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}">
            <Border.BorderBrush>
              <SolidColorBrush po:Freeze="True" Color="{DynamicResource DefaultForegroundColor}" Opacity="0.4"/>
            </Border.BorderBrush>
            <ContentPresenter x:Name="text" TextElement.Foreground="{TemplateBinding Control.Foreground}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource ButtonDefaultDisableBackgroundColor}" Property="Control.Background"/>
              <Setter TargetName="text" Value="{DynamicResource ButtonDefaultDisableForegroundColor}"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="InsideBorder" Value="{DynamicResource SelectionBackground}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="comboboxButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.Margin" Value="4 2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Background="Transparent" Height="24">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" Padding="2">
              <ContentPresenter TextElement.Foreground="{DynamicResource DefaultForeground}" Margin="0 0 22 0"/>
              <Border.Background>
                <SolidColorBrush Color="{DynamicResource ListMainBackgroundColor}" Opacity="0.8"/>
              </Border.Background>
              <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource DefaultForegroundColor}" Opacity="0.6"/>
              </Border.BorderBrush>
            </Border>
            <Border Grid.Column="0" CornerRadius="0" Margin="1" BorderBrush="{DynamicResource Border80}"
                    BorderThickness="0,0,1,0" Background="Transparent"/>
            <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource DefaultForeground}"
                  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 L 0,2 4,6 8,2 8,0 4,4 Z"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value="0.6"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="btnLink" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="{DynamicResource ButtonLinkForegroundColor}"/>
    <Setter Property="Control.Background" Value="#00FFFFFF"/>
    <Setter Property="Border.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Border.CornerRadius" Value="0"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.Margin" Value="4 2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <TextBlock Name="LinkText" Foreground="{TemplateBinding Control.Foreground}" VerticalAlignment="Center"
                     TextDecorations="Underline" HorizontalAlignment="{Binding HorizontalContentAlignment}">
            <ContentPresenter/>
          </TextBlock>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource ButtonLinkDisableForegroundColor}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="LinkText" Property="TextBlock.TextDecorations" Value="None"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
    </Style.Triggers>
  </Style>
</ResourceDictionary>